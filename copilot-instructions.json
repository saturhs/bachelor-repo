{
    "projectOverview": "Use this guide to build a web app where users, basically zootechnicians, can manage the breeding cycle of dairy cows using simple UI/UX to create/delete/edit records in a database, update information about each cow and as a result see which animals need an examination or control.",
    "featureRequirements": [
      "We will use Next.js, shadcn and MongoDB database.",
      "App will be PWA so we will use next-pwa library.",
      "UI should allow to swap between pages from main menu, be responsive and present data from MongoDB database.",
      "Database should support CRUD operations. Its records will contain various data types, that can be used to filter the data displayed to the user.",
      "We will provide an option to analyze database object's attributes like date of last examination, so app can remind the user of an upcoming appointment. A list or other type of data should contain objects that have date, cow_id and description attribute. Then this list will be mapped into calendar dates.",
      "CRUD should work offline as well, so can be easily synchronized later after reconnection to internet.",
      "A button that synchronizes all data stored locally on a device with data in main database.",
      "Analyzed data will be displayed on a calendar subpage, as a reminder of important appointments.",
      "The user can delete all stored data in database by confirming and clicking reset button."
    ],
    "appWorkflow": [
      "After opening the app we are on Main Screen with buttons that redirect to specific pages.",
      "First button 'Animals' redirects to animals.tsx that is basically displaying database tables, accordingly to set up filters. Showing each cow as a Card component. Main screen is a tab selector like in example google chrome browser, three tabs: females, males, babies.",
      "Second button 'Calendar' redirects to calendar.tsx that shows a basic calendar but on each date should display every planned task for the user. App's logic is preparing a list of tasks for every day. The user can change displayed months.",
      "Each page has a button on the left upper corner to go back to main menu."
    ],
    "projectStructure": "It is in bachelor-repo/requirements/project-structure.md",
    "rules": [
      "All new components should go in /components and be named example-component.tsx unless otherwise specified.",
      "All new pages should go in /app."
    ],
    "componentsStyleguide": {
      "buttons": {
        "primaryCTA": {
          "className": "h-12 px-8 text-lg bg-[#ff4f4f] hover:bg-[#ff4f4f]/90 text-white",
          "example": "<Button className=\"h-12 px-8 text-lg bg-[#ff4f4f] hover:bg-[#ff4f4f]/90 text-white\">Click me</Button>"
        },
        "secondary": {
          "className": "h-12 px-8 text-lg hover:bg-gray-100",
          "example": "<Button variant=\"outline\" className=\"h-12 px-8 text-lg hover:bg-gray-100\">Click me</Button>"
        }
      },
      "cards": {
        "standardCard": {
          "className": "bg-white/80 backdrop-blur-sm shadow-sm p-6 rounded-lg",
          "example": "<div className=\"bg-white/80 backdrop-blur-sm shadow-sm p-6 rounded-lg\">Content here</div>"
        },
        "interactiveCard": {
          "className": "bg-white/80 backdrop-blur-sm shadow-sm p-6 rounded-lg hover:bg-gray-50 transition-colors",
          "example": "<div className=\"bg-white/80 backdrop-blur-sm shadow-sm p-6 rounded-lg hover:bg-gray-50 transition-colors\">Content here</div>"
        }
      },
      "backgrounds": {
        "main": {
          "className": "bg-[#faf9f6]",
          "example": "<div className=\"bg-[#faf9f6]\">Content here</div>"
        },
        "overlay": {
          "className": "bg-white/80 backdrop-blur-sm",
          "example": "<div className=\"bg-white/80 backdrop-blur-sm\">Content here</div>"
        }
      },
      "typography": {
        "mainHeading": {
          "className": "text-5xl font-bold mb-12",
          "example": "<h1 className=\"text-5xl font-bold mb-12\">Heading</h1>"
        },
        "subHeading": {
          "className": "text-4xl font-bold mb-2",
          "example": "<h2 className=\"text-4xl font-bold mb-2\">Subheading</h2>"
        },
        "bodyText": {
          "className": "text-gray-600",
          "example": "<p className=\"text-gray-600\">Regular text</p>"
        }
      },
      "layout": {
        "mainContainer": {
          "className": "min-h-screen bg-[#faf9f6] relative",
          "example": "<main className=\"min-h-screen bg-[#faf9f6] relative\">Content here</main>"
        },
        "sectionContainer": {
          "className": "max-w-6xl mx-auto py-16",
          "example": "<section className=\"max-w-6xl mx-auto py-16\">Content here</section>"
        },
        "gridContainer": {
          "className": "grid grid-cols-3 gap-8",
          "example": "<div className=\"grid grid-cols-3 gap-8\">Content here</div>"
        }
      },
      "navigation": {
        "navbar": {
          "className": "w-full p-4 bg-white/80 backdrop-blur-sm shadow-sm",
          "example": "<nav className=\"w-full p-4 bg-white/80 backdrop-blur-sm shadow-sm\">Content here</nav>"
        },
        "navLink": {
          "className": "hover:opacity-80",
          "example": "<Link href=\"/path\" className=\"hover:opacity-80\">Link text</Link>"
        }
      },
      "effects": {
        "blur": "backdrop-blur-sm",
        "shadow": "shadow-sm",
        "hoverTransition": "transition-colors",
        "hoverBackground": "hover:bg-gray-50",
        "hoverOpacity": "hover:opacity-80"
      },
      "spacing": {
        "verticalSection": "py-16",
        "componentGap": "gap-8",
        "buttonPadding": "px-8",
        "contentMarginLarge": "mb-12",
        "contentMarginSmall": "mb-2"
      }
    }
  }